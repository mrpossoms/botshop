#pragma once
#include "core.h"
#include "geo.h"

namespace botshop
{

class Body : Dynamic
{
	private:
		dBodyID ode_body;
		dGeomID ode_geo;

		STLModel* model;

	protected:
		// used to group objects and speed up collision detection. A space will
		// be generated by the root Body and propogated to its children
		dSpaceID ode_body_space;

	public:
		Body(dWorldID ode_world);
		Body(dWorldID ode_world, xml_node<>& node);
		~Body();

		std::vector<Body*> welded_children;
		std::vector<Body*> jointed_children;
		std::vector<dJointID> joints;

		void weld(Object* obj);
		void joint_caster(Object* obj, Vec3& anchor);

		virtual Vec3 position();
		virtual Vec3 position(Vec3& pos);

		virtual Quat orientation();
		virtual Quat orientation(Quat& ori);

		virtual Vec3 velocity();
		virtual Vec3 velocity(Vec3& vel);

		virtual Vec3 force();
		virtual Vec3 force(Vec3& force);

		virtual Vec3 torque();
		virtual Vec3 torque(Vec3& torque);

		virtual dMass mass();
		virtual dMass mass(dMass mass);
};

}
